- name: Checking if ast-grep is available
  command: ast-grep --version
  register: cmd_ast_grep_installed
  ignore_errors: True
  when: ast_grep_perform_install is undefined

- name: Checking ast_grep version
  shell: "ast-grep --version | awk 'NR==1 {print $2}'"
  register: cmd_ast_grep_version
  when:
    - ast_grep_perform_install is undefined
    - cmd_ast_grep_installed.rc == 0

- set_fact:
    ast_grep_perform_install: True
  when:
    - ast_grep_perform_install is undefined
    - cmd_ast_grep_installed.rc != 0 or cmd_ast_grep_version.stdout != ast_grep_version

- name: Set up ast_grep
  when: ast_grep_perform_install is defined and ast_grep_perform_install
  block:

  - name: Preparing tmp directory
    tempfile:
      state: directory
      suffix: ast_grep
    register: ast_grep_tmp_dir

  - name: Downloading ast_grep archive
    get_url:
      url: "{{ ast_grep_archive_url }}"
      dest: "{{ ast_grep_tmp_dir.path }}/{{ ast_grep_archive }}"

  - name: Extracting ast_grep archive
    unarchive:
      src: "{{ ast_grep_tmp_dir.path }}/{{ ast_grep_archive }}"
      dest: "{{ ast_grep_tmp_dir.path }}"
      remote_src: yes

  - name: Find extracted ast_grep executable
    find:
      paths: "{{ ast_grep_tmp_dir.path }}"
      patterns: "^ast-grep$"
      recurse: yes
      use_regex: yes
    register: ast_grep_find_results

  - name: Installing ast_grep
    command: "cp {{ item.path }} {{ path_local_bin }}/ast-grep"
    with_items: "{{ ast_grep_find_results.files }}"

  - name: Ensuring correct executable permissions
    file:
      path: "{{ path_local_bin }}/ast-grep"
      mode: "0775"

  - name: Clean up build directory
    file:
      path: "{{ ast_grep_tmp_dir.path }}"
      state: absent
